# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# a build block invokes sources and runs provisionning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.azure-arm.autogenerated_1"]


  #could not parse template for following block: "template: generated:3: function \"template_dir\" not defined"
  provisioner "file" {
    destination = "{{user `helper_script_folder`}}"
    source      = "{{ template_dir }}/config/"
  }

  provisioner "powershell" {
    inline = ["Set-ExecutionPolicy Bypass -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"]
  }

  provisioner "powershell" {
    inline = ["choco install -y javaruntime", "choco install -y azcopy10"]
  }

  provisioner "powershell" {
    inline = ["java -version"]
  }

  provisioner "powershell" {
    inline = ["# Below will download and run the assessor cli", "$env:Path += \";C:\\ProgramData\\chocolatey\\lib\\azcopy10\\tools\\\"", "$env:AZCOPY_CRED_TYPE = \"Anonymous\"", "$env:AZCOPY_USER_AGENT_PREFIX = \"Microsoft Azure Storage Explorer, 1.12.0, win32, \"", "azcopy copy \"${var.storage_account_url}\" ${var.helper_script_folder} --recursive --from-to=BlobLocal --check-md5 \"FailIfDifferent\"", "ls ${var.helper_script_folder}"]
  }
  
  provisioner "powershell" {
    inline = ["write-host 'Run the install and configure script'", "${var.helper_script_folder}/init.ps1", "write-host 'Perform tests'", "cd ${var.helper_script_folder}\\Assessor-CLI-v4.0.21\\Assessor-CLI; .\\Assessor-CLI.bat -b .\\benchmarks\\${var.benchmark_name}.xml -p \"Level 1 - Member Server\"", "write-host 'push report to blob storage'", "(ls .\\reports)[0] | Rename-Item -NewName \"L1${var.destination_image_version}\" -Verbose", "$report = (Get-Item .\\reports\\L1${var.destination_image_version} | Select FullName).FullName", "azcopy copy $report \"${var.reports_storage_account_url}\" --overwrite=prompt --follow-symlinks --from-to=LocalBlob --blob-type=Detect --put-md5;", "write-host 'Cleanup of the helper script folder'", "Start-Sleep -Seconds 30", "rm ${var.helper_script_folder}\\Extract -Recurse -Force", "write-host 'Cleanup of the installed packages'", "choco uninstall -y javaruntime", "choco uninstall -y azcopy10", "write-host 'sysprep the machine'", "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}", "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit /mode:vm", "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"]
  }
}
